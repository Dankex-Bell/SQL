DROP TABLE IF EXISTS LOG_CLIENTES;

CREATE TABLE IF NOT EXISTS LOG_CLIENTES (
ID_DNI INT AUTO_INCREMENT PRIMARY KEY,
ID_CLIENTE INT NOT NULL,
ACTION_TYPE VARCHAR(50) NOT NULL,
ACTION_DATE DATE NOT NULL,
CLIENTE_ACCION VARCHAR(255) NOT NULL,
FOREIGN KEY (ID_DNI) REFERENCES CLIENTES (ID_DNI)
);

DROP TABLE IF EXISTS LOG_PRODUCTO;
CREATE TABLE IF NOT EXISTS LOG_PRODUCTO (
ID_PRODUCTO INT AUTO_INCREMENT PRIMARY KEY,
ID_PRODUCTO_ORIGINAL INT NOT NULL,
ACTION_TYPE VARCHAR(50) NOT NULL,
ACTION_DATE DATE NOT NULL,
ACTION_TIME TIME NOT NULL,
PRODUCTO_ACCION VARCHAR (255) NOT NULL,
FOREIGN KEY (ID_PRODUCTO_ORIGINAL) REFERENCES PRODUCTO (ID_PRODUCTO)
);

DROP TRIGGER IF EXISTS CLIENTE_BEFORE_INSERT;
DELIMITER //
CREATE TRIGGER CLIENTE_BEFORE_INSERT
BEFORE
INSERT
ON CLIENTES FOR EACH ROW BEGIN
INSERT INTO LOG_CLIENTES (
ID_CLIENTE,
ACTION_TYPE,
ACTION_DATE,
ACTION_TIME,
CLIENTE_ACCION
)
VALUES 
(NEW_ID_CLIENTE,
'INSERT',
CURDATE(),
CURTIME(),
CONCAT('Nuevo Cliente creado: ', new.ID_DNI)
);
END //
DELIMITER ;

DROP TRIGGER IF EXISTS PRODUCTO_AFTER_UPDATE;
DELIMITER //
CREATE TRIGGER PRODUCTO_AFTER_UPDATE
AFTER
UPDATE
ON PRODUCTO FOR EACH ROW BEGIN
INSERT INTO LOG_PRODUCTO (
ID_PRODUCTO_ORIGINAL,
ACTION_TYPE,
ACTION_DATE,
ACTION_TIME,
PRODUCTO_ACCION
)
VALUES (
NEW.ID_PRODUCTO,
'UPDATE',
CURDATE(),
CURTIME(),
CONCAT('Producto Actualizado: ' , NEW.ID_PRODUCTO)
);
END //
DELIMITER ;
